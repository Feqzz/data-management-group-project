Title: Expanding on the Norwegian Linked Open Dataset
Things that can be done right now:

Write in document:
Preface
Thomas har en setning der
Introduction
Nevn semicolon artikkelen
Want to publish
5 Stars
Theoretical background
Semantic Web, TBL, Fordeler ulemper osv.
Owl, RDF, Turtle, xml,
	Sparql
	Endpoints
	Ontologies vs relations

	Current state of semantic web, dead or not?

	Literature
	Current existing solutions/systems
	Kom tilbake til semicolon, snakk om norsk linked open data
	Method:
	Technology choices
	, java er mest vanlig, men vi har valgt python. Se boka til Jean-Baptiste.Python bedre for forskere
	How choose Data collection process
	how choose System architecture

	Ontology architecture
	reusing existing vocabularies


	Resultater

	Discussion and Conclusions:
	Conclude that the semantic web is unfortunately dead
	Talk about challenges
	Semantic web is dead.
	Show graph from stackoverflow.com
	Hard, difficult to link with existing data

	Future proof
	Automatic update with airflow



	References:
	Semicolon
	Boka til jean baptiste
	Five stars

	Implementation:
	Ontology is hopefully complete
	Json parser for individuals, legges i en owl fil
	Finne ut av alle subclasses, garage, street, osv

	Serve ontology online
	Figure out html, how this is hosted etc.
	Create html if necessary, maybe php to read rdf/owl
	Sparql Endpoint



	Finish ontology, create individuals. Create owl file
	Create triples, RDF file





	Presentation:

	Front-page:
	Done, finn logo
	Introduction:


	Background on linked data
	Norwegian linked data, semicolon

	What do we want to do?
	Why do we want to do this?

	Requirements:
	Contribute to linked data
	5 stars



	Implementation:

	Onotologien tegning
	Graf av av en parkeringsplass

	Technologies used, system architecture
	Data collection process

	had to figure out
	Ikke lage duplikat IRI'er


	Demonstration:
	Show sparql queries, our own endpoint
	Enter website
	Click back and forth
	Image of our graph

	Show accept letter from Linked open data cloud, congratulating us on five stars

	Conclusion:
	Ja, vi har bidratt til linked open data, men dessverre så viste det seg at dette er ganske dødt.
	Derfor var det utfordrende.

	Alt teknologi er knyttet til Java omtrent, noe vi ikke liker. Derfor ble det utfordrende.

	Alt er nøyaktig 10 år gammelt.

	Lav modningsgrad på teknologi.

	Men nå kan du gjøre queries på parkeringsplasser

	Five star requirement walkthrough

	Klarte ikke komme med i grafen, fordi den oppdateres skjeldent

	Men vi har submitta




	Ideas for queries:
	Free parking in particular area?



	Ideas for why our project is useful:
	One query, instead of parsing entire json
	Simpler to embed parking informaiton in a website
	Open source

	Advanced queries: Find free handicap parking in city founded before 1950 and with atleast 10000 inhabitants, and have a company in it that was founded before the constitution.
	Good luck with the current api!

	Fremtidsrettet





	Figure out:
	Kjøre periodisk:
	Airflow?
	Oppdatere information

	Vi må kommentere og rydde opp i koden.


	Kent:
	Bli kvitt spm tegn hvis jeg klarer
	DONE - Få kjøre fuseki-server uten at den krasher
	DONE - Reverse proxy på Pubby, public website
	Sett defualt node i pubby til å være ParkingFacility eller ParkingCompany
	Prøv å legge til label eller comment i pubby
	Sette opp Airflow:
	Generate json
	Create rdf
	restart fuseki
	restart pubby


	Skriv Technology choices og Architecture, prøv å lage figur

	Thomas:
	prøve finne api på bilder
	Mest mulig zoom, helst satelitt
	Prøve å legge til dette som trippel i graph (createrdf.py), basert på koordinater

	Stian:
	DONE Virtual env
	DONE Endre createrdf til å loope gjennom json
	DONE Lage klasser og properties i createrdf
	DONE Begynne på presentasjon, sette opp alle slidene vi tror vi trenger
	Lage airflow figur
	DONE Legge til is_active igjen på facility
	DONE Sørg for at de som er aktive ikke har en attributt deactivation date

	En bør undersøke dette:
	When modeling Linked Data metadata, it is a best practice to include the MIME type, publishing organization and/or agency, creation date, modification date, version, frequency of updates, and contact email address, if this information is available and appropriate to the data. In subsequent sections we outline guidance for the use of vocabularies, as well as, a vocabulary "checklist" to assist in the modeling process.








